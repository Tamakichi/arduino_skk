#include <stdio.h>
#include <string.h>
#include <stdint.h>

#define MAX_RH_LEN 4
#define TBLSIZE (sizeof(rh_table)/sizeof(rh_table[0]))
typedef struct romaji_hiragana {
	char romaji[5];
	char hiragana[8];
} RomaHira;

RomaHira rh_table[] = {
	{"a",  "あ"},	{"i" , "い"},	{"u",  "う"},	{"e" , "え"},	{"o" , "お"},
	{"ka", "か"},	{"ki" ,"き"},	{"ku", "く"},	{"ke" ,"け"},	{"ko" ,"こ"},
	{"kya","きゃ"},	{"kyi","きぃ"},	{"kyu","きゅ"},	{"kye","きぇ"},	{"kyo","きょ"},
	{"kwa","くゎ"},	{"kwi","くぃ"},	{"kwu","くぅ"},	{"kwe","くぇ"},	{"kwo","くぉ"},
	{"sa", "さ"},	{"si" ,"し"},	{"su", "す"},	{"se", "せ"},	{"so", "そ"},
	{"sya","しゃ"},	{"syi","し"},	{"syu","しゅ"},	{"sye","しぇ"},	{"syo","しょ"},
	{"sha","しゃ"},	{"shi","し"},	{"shu","しゅ"},	{"she","しぇ"},	{"sho","しょ"},
	{"swa","すゎ"},	{"swi","すぃ"},	{"swu","すぅ"},	{"swe","すぇ"},	{"swo","すぉ"},
	{"ta", "た"},	{"ti", "ち"},	{"tu", "つ"},	{"te" ,"て"},	{"to" ,"と"},
	{"tya","ちゃ"},	{"tyi","ちぃ"},	{"tyu","ちゅ"},	{"tye","ちぇ"},	{"tyo","ちょ"},
	{"tha","てゃ"},	{"thi","てぃ"},	{"thu","てゅ"},	{"the","てぇ"},	{"tho","てょ"},
	{"tsa","つぁ"},	{"tsi","つぃ"},	{"tsu","つ"},	{"tse","つぇ"},	{"tso","つぉ"},
	{"ca", "か"},	{"ci" ,"し"},	{"cu" ,"く"},	{"ce", "せ"},	{"co", "こ"},
	{"cha","ちゃ"},	{"chi","ち"},	{"chu","ちゅ"},	{"che","ちぇ"},	{"cho","ちょ"},
	{"cya","ちゃ"},	{"cyi","ちぃ"},	{"cyu","ちゅ"},	{"cye","ちぇ"},	{"cyo","ちょ"},
	{"qa", "くぁ"},	{"qi" ,"くぃ"},	{"qu", "く"},	{"qe", "くぇ"},	{"qo", "くぉ"},
	{"na", "な"},	{"ni", "に"},	{"nu", "ぬ"},	{"ne", "ね"},	{"no", "の"},
	{"nya","にゃ"},	{"nyi","にぃ"},	{"nyu","にゅ"},	{"nye","にぇ"},	{"nyo","にょ"},
	{"nwa","ぬゎ"},	{"nwi","ぬぃ"},	{"nwu","ぬぅ"},	{"nwe","ぬぇ"},	{"nwo","ぬぉ" },
	{"ha", "は" },	{"hi", "ひ"},	{"hu", "ふ"},	{"he", "へ"},	{"ho", "ほ"},
	{"hya","ひゃ"},	{"hyi","ひぃ"},	{"hyu","ひゅ"},	{"hye","ひぇ"},	{"hyo","ひょ"},
	{"fa", "ふぁ"},	{"fi", "ふぃ"},	{"fu", "ふ"},	{"fe" ,"ふぇ"},	{"fo", "ふぉ"},
	{"fya","ふゃ"},	{"fyi","ふぃ"},	{"fyu","ふゅ"},	{"fye","ふぇ"},	{"fyo","ふょ"},
	{"ma", "ま"},	{"mi", "み"},	{"mu", "む"},	{"me", "め"},	{"mo", "も"},
	{"mya","みゃ"},	{"myi","みぃ"},	{"myu","みゅ"},	{"mye","みぇ"},	{"myo","みょ"},
	{"ya", "や"},	{"yi" ,"い"},	{"yu", "ゆ"},	{"ye", "いぇ"},	{"yo", "よ"},
	{"ra", "ら"},	{"ri" ,"り"},	{"ru", "る"},	{"re", "れ"},	{"ro" ,"ろ"},
	{"rya","りゃ"},	{"ryi","りぃ"},	{"ryu","りゅ"},	{"rye","りぇ"},	{"ryo","りょ"},
	{"wa", "わ"},	{"wi", "うぃ"},	{"wu", "う"},	{"we", "うぇ"},	{"wo", "うぉ"},
	{"ga" ,"が"},	{"gi", "ぎ"},	{"gu", "ぐ"},	{"ge", "げ"},	{"go", "ご"},
	{"gya","ぎゃ"},	{"gyi","ぎぃ"},	{"gyu","ぎゅ"},	{"gye","ぎぇ"},	{"gyo","ぎょ"},
	{"za", "ざ"},	{"zi", "じ"},	{"zu", "ず"},	{"ze", "ぜ"},	{"zo", "ぞ"},
	{"zya","じゃ"},	{"zyi","じぃ"},	{"zyu","じゅ"},	{"zye","じぇ"},	{"zyo","じょ"},
	{"ja", "じゃ"},	{"ji" ,"じ"},	{"ju", "じゅ"},	{"je", "じぇ"},	{"jo", "じょ"},
	{"jya","じゃ"},	{"jyi","じぃ"},	{"jyu","じゅ"},	{"jye","じぇ"},	{"jyo","じょ"},
	{"da", "だ"},	{"di", "ぢ"},	{"du", "づ"},	{"de", "で"},	{"do", "ど"},
	{"dha","でゃ"},	{"dhi","でぃ"},	{"dhu","でゅ"},	{"dhe","でぇ"},	{"dho","でょ"},
	{"dya","ぢゃ"},	{"dyi","ぢぃ"},	{"dyu","ぢゅ"},	{"dye","ぢぇ"},	{"dyo","ぢょ"},
	{"ba", "ば"},	{"bi" ,"び"},	{"bu", "ぶ"},	{"be", "べ"},	{"bo", "ぼ"},
	{"bya","びゃ"},	{"byi","びぃ"},	{"byu","びゅ"},	{"bye","びぇ"},	{"byo","びょ"},
	{"va", "ゔぁ"},	{"vi", "ゔぃ"},	{"vu", "ゔ"},	{"ve", "ゔぇ"},	{"vo", "ゔぉ"},
	{"vya","ゔゃ"},	{"vyi","ゔぃ"},	{"vyu","ゔゅ"},	{"vye","ゔぇ"},	{"vyo","ゔょ"},
	{"pa" ,"ぱ"},	{"pi", "ぴ"},	{"pu", "ぷ"},	{"pe", "ぺ"},	{"po", "ぽ"},
	{"pya","ぴゃ"},	{"pyi","ぴぃ"},	{"pyu","ぴゅ"},	{"pye","ぴぇ"},	{"pyo","ぴょ"},
	{"xa" ,"ぁ"},	{"xi", "ぃ"},	{"xu", "ぅ"},	{"xe", "ぇ"},	{"xo", "ぉ"},
	{"xya","ゃ"},	{"xyi","ぃ"},	{"xyu","ゅ"},	{"xye","ぇ"},	{"xyo","ょ"},
	{"la", "ぁ"},	{"li", "ぃ"},	{"lu", "ぅ"},	{"le", "ぇ"},	{"lo", "ぉ"},
	{"lya","ゃ"},	{"lyi","ぃ"},	{"lyu","ゅ"},	{"lye","ぇ"},	{"lyo","ょ"},
	{"ltu","っ"},	{"xtu","っ"},	{"ltsu","っ"},	{"xtsu","っ"},
};

// ひらがなに変換できるローマ字の並びかどうかを判定する
//  引数
//    tokens: ローマ字文字列
//  戻り値
//    0:変換できない 1:変換できる
//
uint8_t isUnit(const char* tokens) {
	for (uint16_t i = 0; i < TBLSIZE; i++) {
		if (!strncmp(tokens, rh_table[i].romaji, strlen(rh_table[i].romaji))) {
			return 1;
		}
	}
	return 0;
}

// ひらがなのテーブルのインデックスを返す
// 戻り値
// 　見つかった場合：	0以上
//	 見つからない場合： -1
//
int16_t getUnitIndex(const char* tokens) {
	for (uint16_t i = 0; i < TBLSIZE; i++) {
		if (!strncmp(tokens, rh_table[i].romaji, strlen(rh_table[i].romaji))) {
			return i;
		}
	}
	return -1;
}

int main() {
	//printf("rc=%d\n", strncmp("あいう","あいう", strlen("あいう")));
	//for (int i=0; i < TBLSIZE; i++) 
    //	printf("rc=%d\n", isUnit((const char*)rh_table[i].romaji));
	printf("rc=%d\n", getUnitIndex("he"));
}